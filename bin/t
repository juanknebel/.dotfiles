#!/usr/bin/env bash

# orignal script here: https://github.com/joshmedeski/t-smart-tmux-session-manager

tmux ls &>/dev/null
TMUX_STATUS=$?

HOME_REPLACER=""                                          # default to a noop
echo "$HOME" | grep -E "^[a-zA-Z0-9\-_/.@]+$" &>/dev/null # chars safe to use in sed
HOME_SED_SAFE=$?
if [ $HOME_SED_SAFE -eq 0 ]; then # $HOME should be safe to use in sed
	HOME_REPLACER="s|^$HOME/|~/|"
fi

if fd --version &>/dev/null; then # fd is installed
	DIR_BIND="ctrl-d:change-prompt(directory> )+reload(cd $HOME && echo $HOME; fd --type d --hidden --absolute-path --color never --exclude .git --exclude node_modules)"
else # fd is not installed
	DIR_BIND="ctrl-d:change-prompt(directory> )+reload(cd $HOME && find ~+ -type d -name node_modules -prune -o -name .git -prune -o -type d -print)"
fi

get_sessions_by_mru() {
	tmux list-sessions -F '#{session_last_attached} #{session_name}' | sort --numeric-sort --reverse | awk '{print $2}'
}

zoxide query "$1" &>/dev/null
ZOXIDE_RESULT_EXIT_CODE=$?
if [ $ZOXIDE_RESULT_EXIT_CODE -eq 0 ]; then # zoxide result found
	RESULT=$(zoxide query "$1")
else # no zoxide result found
	ls "$1" &>/dev/null
	LS_EXIT_CODE=$?
	if [ $LS_EXIT_CODE -eq 0 ]; then # directory found
		RESULT=$1
	else # no directory found
		echo "No directory found."
		exit 1
	fi
fi

if [ "$RESULT" = "" ]; then # no result
	exit 0                     # exit silently
fi

if [ $HOME_SED_SAFE -eq 0 ]; then
	RESULT=$(echo "$RESULT" | sed -e "s|^~/|$HOME/|") # get real home path back
fi

zoxide add "$RESULT" &>/dev/null # add to zoxide database
FOLDER=$(basename "$RESULT")
SESSION_NAME=$(echo "$FOLDER" | tr ' .:' '_')

if [ $TMUX_STATUS -eq 0 ]; then                                 # tmux is running
	SESSION=$(tmux list-sessions -F '#S' | grep "^$SESSION_NAME$") # find existing session
else
	SESSION=""
fi

if [ "$TMUX" = "" ]; then                          # not currently in tmux
	if [ "$SESSION" = "" ]; then                      # session does not exist
		tmux new-session -s "$SESSION_NAME" -c "$RESULT" # create session and attach
	else                                              # session exists
		tmux attach -t "$SESSION"                        # attach to session
	fi
else                                                  # currently in tmux
	if [ "$SESSION" = "" ]; then                         # session does not exist
		tmux new-session -d -s "$SESSION_NAME" -c "$RESULT" # create session
		tmux switch-client -t "$SESSION_NAME"               # attach to session
	else                                                 # session exists
		tmux switch-client -t "$SESSION"                    # switch to session
	fi
fi

